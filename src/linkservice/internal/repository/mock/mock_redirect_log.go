// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/lapitskyss/go_backend_1_project/src/linkservice/internal/repository/repository (interfaces: RedirectLogInterface)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/lapitskyss/go_backend_1_project/src/linkservice/internal/model"
)

// MockRedirectLogInterface is a mock of RedirectLogInterface interface.
type MockRedirectLogInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRedirectLogInterfaceMockRecorder
}

// MockRedirectLogInterfaceMockRecorder is the mock recorder for MockRedirectLogInterface.
type MockRedirectLogInterfaceMockRecorder struct {
	mock *MockRedirectLogInterface
}

// NewMockRedirectLogInterface creates a new mock instance.
func NewMockRedirectLogInterface(ctrl *gomock.Controller) *MockRedirectLogInterface {
	mock := &MockRedirectLogInterface{ctrl: ctrl}
	mock.recorder = &MockRedirectLogInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRedirectLogInterface) EXPECT() *MockRedirectLogInterfaceMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockRedirectLogInterface) Add(arg0 *model.RedirectLog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockRedirectLogInterfaceMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockRedirectLogInterface)(nil).Add), arg0)
}

// CountRedirects mocks base method.
func (m *MockRedirectLogInterface) CountRedirects(arg0 uint64) (*uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CountRedirects", arg0)
	ret0, _ := ret[0].(*uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CountRedirects indicates an expected call of CountRedirects.
func (mr *MockRedirectLogInterfaceMockRecorder) CountRedirects(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CountRedirects", reflect.TypeOf((*MockRedirectLogInterface)(nil).CountRedirects), arg0)
}
